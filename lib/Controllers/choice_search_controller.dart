import 'dart:ui';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:gromada/Pages/Search/models/vac.dart';
import 'package:gromada/Pages/services/VacDepository.dart';
import 'package:gromada/local_datastore/hive_service.dart';
import 'package:hexcolor/hexcolor.dart';
import 'package:hive/hive.dart';
import 'package:hive_flutter/hive_flutter.dart';

const grom55900 = [
  "1421586403",
  "1421510100",
  "1421587201",
  "1421582802",
  "1421587203",
  "1421586404",
  "1421581203",
  "1421587204",
  "1421584801",
  "1421586401",
  "1421586402",
  "1421583601",
  "1421582801",
  "1421510102",
  "1421581401",
  "1421510103",
  "1421584802",
  "1421587601",
  "1421510101",
  "1421581201",
  "1421555900",
  "1421587202",
  "1421581202"
];
const grom55901 = [
  "1421557202",
  "1421555600",
  "1421584001",
  "1421557200",
  "1421584003",
  "1421556500",
  "1421556800",
  "1421584002",
  "1421555300",
  "1421557201",
  "1421584004"
];
const grom55902 = [
  "1421580401",
  "1421583101",
  "1421582001",
  "1421586801",
  "1421583001",
  "1421582406",
  "1421588001",
  "1421584701",
  "1421582403",
  "1421582003",
  "1421586802",
  "1421585601",
  "1421583202",
  "1421584703",
  "1421583201",
  "1421585604",
  "1421582401",
  "1421582402",
  "1421586301",
  "1421585603",
  "1421582405",
  "1421587901",
  "1421581301",
  "1421582404",
  "1421580404",
  "1421587903"
];
const grom55903 = [
  "1421589205",
  "1421589202",
  "1421588801",
  "1421588802",
  "1421555101",
  "1421555100",
  "1421510101",
  "1421589206",
  "1421589204",
  "1421589203",
  "1421555102",
  "1421587701",
  "1421556600",
  "1421555103",
  "1421589201"
];
const grom54300 = [
  "1423382001",
  "1421584401",
  "1414890004",
  "1423385802",
  "1414800000",
  "1423385803",
  "1414890001",
  "1421581601",
  "1421280803",
  '1414890006',
  "1414890003",
  "1414890002",
  "1414890005",
  "1421586001",
  "1421280204"
];
const grom55701 = [
  "1421283601",
  "1421284003",
  "1421283603",
  "1421285202",
  "1421281201",
  "1421284002",
  "1421284001",
  "1421285205",
  "1421285204",
  "1421285201",
  "1423385002",
  "1421285203",
  "1421283604",
  "1421283001"
];
const grom55702 = [
  "1421286602",
  "1421282405",
  "1421284402",
  "1421282407",
  "1421282401",
  "1421284403",
  "1421280204",
  "1421282403",
  "1421286605",
  "1421284406",
  "1421282404",
  "1421281802",
  "1421286607",
  "1421282406",
  "1421284405",
  "1421281801",
  "1421286604",
  "1421284404",
  "1421286606",
  "1421284401",
  "1421286603",
  "1421282409",
  "1421282408",
  "1421282402"
];
const grom55700 = [
  "1421286401",
  "1421286403",
  "1421255104",
  "1421280802",
  "1421255103",
  "1421281402",
  "1421282702",
  "1421282701",
  "1421280203",
  "1421282703",
  "1421255100",
  "1421580801",
  "1421255101",
  "1421286402",
  "1421284802",
  "1421280805",
  "1421280803",
  "1421284601",
  "1421284805",
  "1421281401",
  "1421255102",
  "1421281403",
  "1421284803",
  "1421280202",
  "1421280204",
  "1421284801",
  "1421280801",
  "1421284804"
];
const grom50300 = ["1425587606", "1410200000"];
const grom50301 = [
  "1425584305",
  "1425584306",
  "1425586504",
  "1425587305",
  "1425582104",
  "1425583201",
  "1425583205",
  "1425587303",
  "1425584301",
  "1425585601",
  "1425584304",
  "1425586503",
  "1425585604",
  "1425587309",
  "1425583203",
  "1425585401",
  "1425584307",
  "1425584303",
  "1425584308",
  "1425555201",
  "1425585603",
  "1425555202",
  "1425582102",
  "1425555301",
  "1425555900",
  "1425587301",
  "1425585602",
  "1425555600",
  "1425555200",
  "1425586501",
  "1425582101",
  "1425555203",
  "1425585402",
  "1425585403",
  "1425587307",
  "1425583101",
  "1425584302",
  "1425555300",
  "1425582103",
  "1425583204"
];

const grom50500 = [
  "1410390014",
  "1410390009",
  "1410390006",
  "1410390008",
  "1410390015",
  "1410300000",
  "1410345600",
  "1410390003",
  "1410390011",
  "1410390010",
  "1410390004",
  "1410390012",
  "1410390016",
  "1410390005",
  "1410390017",
  "1410390001",
  "1410390007",
  "1410390013",
  "1410390002"
];
const grom50501 = [
  "1420983501",
  "1420983504",
  "1420983505",
  '1420983502',
  "1420983506",
  "1420983503"
];
const grom50502 = [
  "1420985004",
  "1420955401",
  "1420955400",
  "1420985005",
  "1420955404",
  "1420986201",
  "1420985002",
  "1420955500",
  "1420986205",
  "1420955405",
  "1420955402",
  "1420985001",
  "1420910818",
  "1420955403",
  "1420986202",
  "1420986203",
  "1420986204",
  "1420910600",
  "1420955406"
];
const grom50503 = [
  "1420910400",
  "1420983903",
  "1420910402",
  "1420910403",
  "1420910405",
  "1420910404",
  "1420910406"
];
const grom50504 = [
  "1420910803",
  "1420910814",
  "1420985003",
  "1420910800",
  "1420910801",
  '1420910815',
  "1420910819",
  "1420910823",
  "1420910824",
  "1420910826",
  "1420910827",
  "1420910828",
  "1420910830",
  "1420910831",
  "1420910834",
  "1420910836",
  "1420910833",
  "1420910817",
  "1420910810",
  "1420910813",
  "1420910806",
  "1420910807",
  "1420910808",
  "1420910809",
  "1420910820",
  "1420910829",
  "1420910812",
  "1420910835",
  "1420910802",
  "1420910805",
  "1420910811",
  "1420910821",
  "1420910822",
  "1420910825",
  "1420910804",
  "1420910816",
  "1420910832"
];
const grom50505 = ["1420983902", "1420911000", "1420985202", "1420983903"];
const grom51100 = [
  "1411246503",
  "1411247200",
  "1411245307",
  "1411245300",
  "1411290001",
  "1411246507",
  "1411245305",
  "1411270300",
  "1411245309",
  "1411246501",
  "1411245600",
  "1411246505",
  "1411245900",
  "1411246800",
  "1411200000",
  "1411246200",
  "1411245301"
];
const grom51300 = ["1422785705", "1422785701", "1411300000", "1411390001"];
const grom51500 = [
  "1422055501",
  "1422088002",
  "1422088001",
  "1411570300",
  "1422055505",
  "1411500000",
  "1422088003",
  "1422055504",
  "1422055500",
  "1422055502",
  "1422081101",
  "1422088004",
  "1411545300",
  "1422055503",
  "1422081105",
  "1422081103"
];
const grom51501 = [
  "1422084406",
  "1422084407",
  "1422084403",
  "1422084408",
  "1422088805",
  "1422082204",
  "1422088809",
  "1422084404",
  "1422084409",
  "1422088804",
  "1422088803",
  "1422088801",
  "1422084405",
  "1422088807",
  "1422084401",
  "1422088808",
  "1422084402",
  "1422088806",
  "1422082202",
  "1422082201",
  "1422082203",
  "1422088802"
];
const grom51502 = [
  "1422087701",
  "1422087706",
  "1422083305",
  "1422083303",
  "1422083301",
  "1422083306",
  "1422083302",
  "1422083304",
  "1422083311",
  "1422083309",
  "1422087707",
  "1422087704",
  "1422087703",
  "1422087711",
  "1422087714",
  "1422087710",
  "1422087705",
  "1422087712",
  "1422087709",
  "14220877 02",
  "1422087713",
  "1422087708"
];
const grom51503 = [
  "1422085505",
  "1411570500",
  "1422085504",
  "1422085502",
  "1422085503",
  "1411570501",
  "1422085501"
];
const grom51700 = [
  "1422486007",
  "1411745600",
  "1411745800",
  "1411746201",
  "1411746200",
  "1411700000",
  "1411790003",
  "1422483505",
  "1422486013",
  "1422486001",
  "1422484401",
  "1411746203",
  "1422483501",
  "1422486011",
  "1422486015",
  "1422483503",
  "1422486005",
  "1422483901",
  "1422486009"
];
const grom52300 = [
  "1422484103",
  "1422483705",
  "1422484102",
  "1422482003",
  "1422482002",
  "1422482501",
  "1412600000",
  "1422483701",
  "1422482505",
  "1422481501",
  "1422482001",
  "1422485703",
  "1422483707",
  "1422484113",
  "1422484001",
  "1422485701",
  "1422484003",
  "1422484111",
  "1422483703",
  "1422482502",
  "1422482503",
  "1422482504",
  "1422484101",
  "1422482007"
];
const grom52301 = [
  "1422482719",
  "1422482725",
  "1422482701",
  "1422482703",
  "1422482702",
  "1422482704",
  "1422482707",
  "1422482713",
  "1422482716",
  "1422482723",
  "1422482722",
  "1422482705",
  "1422482720",
  "1422482717",
  "1422482706",
  "1422482711",
  "1422482709",
  "1422482714",
  "1422482718",
  "1422482721",
  "1422482724",
  "1422482715",
  "1422482708",
  "1422482712",
  "1422482710"
];
const grom52500 = [
  "1412946201",
  "1412990001",
  "1412945601",
  "1412900000",
  "1412945900",
  "1412945600",
  "1412947100",
  "1412947700",
  "1412990003",
  "1424281001",
  "1412946200",
  "1412946500",
  "1412946800",
  "1412947400",
  "1412945300"
];
const grom52700 = [
  "1413245400",
  "1422784010",
  "1422782805",
  "1422784007",
  "1422781101",
  "1422782804",
  "1422784006",
  "1422782806",
  "1422784008",
  "1422784701",
  "1422782809",
  "1422782803",
  "1422784504",
  "1422786509",
  "1422786502",
  "1422786501",
  "1422786503",
  "1422786508",
  "1422782802",
  "1422783803",
  "1422782801",
  "1422784001",
  "1422783807",
  "1422784502",
  "1422784501",
  "1422786506",
  "1422786507",
  "1422784002",
  "1422784503",
  "1422786504",
  "1422784005",
  "1422782807",
  "1413200000",
  "1422782810",
  "1422783801",
  "1413270600",
  "1422784704",
  "1422786505",
  "1422784703",
  "1422783805",
  "1422782808"
];
const grom52701 = [
  "1422781602",
  "1422755304",
  "1422755301",
  "1422755302",
  "1422788301",
  "1422755602",
  "1422781610",
  "1422755601",
  "1422783603",
  "1422755603",
  "1422755600",
  "1422781603",
  "1422755300",
  "1422783001",
  "1422755604",
  "1422781604",
  "1422755303",
  "1422781605",
  "1422781608",
  "1422755306",
  "1422783602",
  "1422783003",
  "1422781601",
  "1422781606",
  "1422788303",
  "1422755605",
  "1422788305",
  "1422755305",
  "1422784006",
  "1422781607",
  "1422781609"
];
const grom52702 = [
  "1422786002",
  "1422756303",
  "1422781610",
  "1422756300",
  "1422756304",
  "1422756301",
  "1422756302"
];
const grom52900 = [
  "1413390012",
  "1413390013",
  "1413390019",
  "1413390022",
  "1413390024",
  "1413390007",
  "1413390028",
  "1413300000",
  "1413390025",
  "1413345401",
  "1413390001",
  "1413390002",
  "1413390004",
  "1413345200",
  "1413390006",
  "1413390026",
  "1413390027",
  "1413345900",
  "1413390029",
  "1413390003",
  "1413345800",
  "1413345801",
  "1413345400",
  "1413390020",
  "1413390021",
  "1413390009",
  "1413390011",
  "1413345201",
  "1413390014",
  "1413390018",
  "1413390008",
  "1413390010",
  "1413390015",
  "1413345600",
  "1413390005",
  "1413390017",
  "1413345901",
  "1413390016",
  "1413390023"
];
const grom53300 = [
  "1423981105",
  "1412345600",
  "1423982201",
  "1423982202",
  "1423981102",
  "1412300000",
  "1423981104",
  "1423981101",
  "1423982203",
  "1423982204",
  "1423981103"
];
const grom53301 = [
  "1421585803",
  "1421781602",
  "1412345803",
  "1421583703",
  "1412345800",
  "1412345300",
  "1421585802",
  "1421588401",
  "1421583701",
  "1421583702",
  "1421588201",
  "1421589004",
  "1421589001",
  "1421781805",
  "1421588202",
  "1412345801",
  "1423981101",
  "1421585801"
];
const grom53500 = [
  "1422785001",
  "1413846500",
  "1413870900",
  "1413845300",
  "1422785005",
  "1422785003",
  '1422785004',
  "1413800000",
  '1422785002'
];
const grom53700 = [
  "1424255600",
  "1424284701",
  "1424255680",
  "1424255300",
  "1414100000"
];
const grom53701 = [
  "1424284601",
  "1424284602",
  "1424282407",
  "1424282401",
  "1424284603",
  "1424281502",
  "1424284604",
  "1424282403",
  "1424281503",
  "1424281501",
  "1424281504",
  "1414170500",
  "1424282405"
];
const grom53702 = [
  "1424256500",
  "1424256501",
  "1424256505",
  "1424256506",
  "1424256510",
  "1424256502",
  "1424256508",
  "1424256507",
  "1424256504" "1424256503"
];
const grom53703 = [
  "1424280504",
  "1424280501",
  "1424280505",
  "1424280502",
  "1424280503"
];
const grom53704 = [
  "1424256201",
  "1424210800",
  "1424210805",
  "1424210806",
  "1424210809",
  "1424255900",
  "1424210802",
  "1424210807",
  "1424210808",
  "1424210801",
  "1424210803",
  "1424210804",
  "1424256200",
  "1424210810",
  "1424256202"
];
const grom55100 = [
  "1420355119",
  "1420355124",
  "1420355129",
  "1420355134",
  "1420355103",
  "1420355104",
  "1420355110",
  "1420355115",
  "1420355116",
  "1420355118",
  "1420355111",
  "1420355112",
  "1420355107",
  "1420355130",
  "1420355109",
  "1420355133",
  "1420355132",
  "1420355138",
  "1420355127",
  "1420355137",
  "1420355139",
  "1420355128",
  "1420355102",
  "1420355121",
  "1420355123",
  "1420355100",
  "1420355140",
  "1420355122",
  "1420355108",
  "1420355114",
  "1420355131",
  "1420355105",
  "1420355125",
  "1420355135",
  "1420355101",
  "1420355117",
  "1420355136",
  "1420355113",
  "1420355141",
  "1420355126",
  "1420355120",
  "1420355106"
];
const grom55101 = [
  "1420387503",
  "1420387003",
  "1420387001",
  "1420387310",
  "1420387009",
  "1422756304",
  "1411545600",
  "1420383301",
  "1420387304",
  "1420387505",
  "1420387303",
  "1420383801",
  "1420383303",
  "1420387507",
  "1420387501",
  "1420383305",
  "1420387305",
  "1420383815",
  "1420383803",
  "1420387301"
];
const grom56100 = [
  "1421781803",
  "1421755102",
  "1421785507",
  "1421785005",
  "1421787004",
  "1421785506",
  "1421781801",
  "1421785007",
  "1421785003",
  "1421786601",
  "1421781103",
  "1421781105",
  "1421787002",
  "1421787003",
  "1421781102",
  "1421781802",
  "1421787005",
  "1421785001",
  "1421781101",
  "1421785503",
  "1421755100",
  "1421781104",
  "1421781804",
  "1421785501",
  "1421787001",
  "1421781805",
  "1421755101"
];
const grom56101 = [
  "1421783304",
  "1421784401",
  "1421783301",
  "1421781603",
  "1421783302",
  "1421784403",
  "1421781601",
  "1421784402",
  "1421783303",
  "1421781602",
  "1421783309",
  "1421783305",
  "1421782202",
  "1421782203",
  "1421781604",
  "1421782201"
];
const grom56900 = [
  "1423383001",
  "1423385001",
  "1423310100",
  "1423310101",
  "1423382503",
  "1423383004",
  "1423310400",
  "1423383501",
  "1423382501",
  "1423383002",
  "1423382502",
  "1423385201",
  "1423383003",
  "1423384001",
  "1423385202",
  "1423383502",
  "1423385002"
];
const grom56901 = [
  "1413845900",
  "1423310603",
  "1413870300",
  "1423385404",
  "1423310601",
  "1423385403",
  "1423388503",
  "1423310602",
  "1423385405",
  "1423381501",
  "1423381505",
  "1423388502",
  "1423385401",
  "1423385402",
  "1422782304",
  "1422782301",
  "1423381503",
  "1423381507",
  "1423381504",
  "1423382502",
  "1423310600",
  "1413846200",
  "1423381502",
  "1422782303",
  "1423381506",
  "1423388501",
  "1422782302",
  "1423388504"
];
const grom57300 = [
  "1423955500",
  "1423984401",
  "1423955100",
  "1423984406",
  "1423955502",
  "1423984404",
  "1423983301",
  "1423985501",
  "1423984405",
  "1423984403",
  "1423955501",
  "1423985502",
  "1423984402",
  "1423983302",
  "1423986602",
  "1423986601",
  "1423983303",
];
const grom58500 = [
  "1422783409",
  "1422755603",
  "1422783413",
  "1413845600",
  "1422783206",
  "1422783415",
  "1423381101",
  "1422783405",
  "1422783407",
  "1423381104",
  "1422783201",
  "1422783411",
  "1423381102",
  "1423381103",
  "1413600000"
];

class ChoiceSearchController extends GetxController {
  List vacancy0 = [];
  List<Vac> vacancy = <Vac>[].obs;
  List<Vac> filteredVac = <Vac>[].obs;
  List<Vac> filteredVac0 = <Vac>[].obs;
  List vacancy00 = [].obs;
  List vacancy01 = [].obs;
  RxBool isLoading = true.obs;
  RxBool isLoad = false.obs;
  late dynamic value;
  late List gromada = [].obs;

  final HiveService hiveService = HiveService();
  @override
  Future<void> onInit() async {
    // Hive.registerAdapter(VacAdapter());
    await Hive.initFlutter();
    // Hive.registerAdapter(VacAdapter());
    await Hive.openBox("vacancy");

    value = Get.arguments;
    gromada = int.parse(value) == 50300
        ? grom50300
        : int.parse(value) == 50301
            ? grom50301
            : int.parse(value) == 50500
                ? grom50500
                : int.parse(value) == 50501
                    ? grom50501
                    : int.parse(value) == 50502
                        ? grom50502
                        : int.parse(value) == 50503
                            ? grom50503
                            : int.parse(value) == 50504
                                ? grom50504
                                : int.parse(value) == 50505
                                    ? grom50505
                                    : int.parse(value) == 51100
                                        ? grom51100
                                        : int.parse(value) == 51300
                                            ? grom51300
                                            : int.parse(value) == 51500
                                                ? grom51500
                                                : int.parse(value) == 51501
                                                    ? grom51501
                                                    : int.parse(value) == 51502
                                                        ? grom51502
                                                        : int.parse(value) ==
                                                                51503
                                                            ? grom51503
                                                            : int.parse(value) ==
                                                                    51700
                                                                ? grom51700
                                                                : int.parse(value) ==
                                                                        52300
                                                                    ? grom52300
                                                                    : int.parse(value) ==
                                                                            52301
                                                                        ? grom52301
                                                                        : int.parse(value) ==
                                                                                52500
                                                                            ? grom52500
                                                                            : int.parse(value) == 52700
                                                                                ? grom52700
                                                                                : int.parse(value) == 52701
                                                                                    ? grom52701
                                                                                    : int.parse(value) == 52702
                                                                                        ? grom52702
                                                                                        : int.parse(value) == 52900
                                                                                            ? grom52900
                                                                                            : int.parse(value) == 53300
                                                                                                ? grom53300
                                                                                                : int.parse(value) == 53301
                                                                                                    ? grom53301
                                                                                                    : int.parse(value) == 53500
                                                                                                        ? grom53500
                                                                                                        : int.parse(value) == 53700
                                                                                                            ? grom53700
                                                                                                            : int.parse(value) == 53701
                                                                                                                ? grom53701
                                                                                                                : int.parse(value) == 53702
                                                                                                                    ? grom53702
                                                                                                                    : int.parse(value) == 53703
                                                                                                                        ? grom53703
                                                                                                                        : int.parse(value) == 53704
                                                                                                                            ? grom53704
                                                                                                                            : int.parse(value) == 54300
                                                                                                                                ? grom54300
                                                                                                                                : int.parse(value) == 55100
                                                                                                                                    ? grom55100
                                                                                                                                    : int.parse(value) == 55101
                                                                                                                                        ? grom55101
                                                                                                                                        : int.parse(value) == 55700
                                                                                                                                            ? grom55700
                                                                                                                                            : int.parse(value) == 55701
                                                                                                                                                ? grom55701
                                                                                                                                                : int.parse(value) == 55702
                                                                                                                                                    ? grom55702
                                                                                                                                                    : int.parse(value) == 55900
                                                                                                                                                        ? grom55900
                                                                                                                                                        : int.parse(value) == 55901
                                                                                                                                                            ? grom55901
                                                                                                                                                            : int.parse(value) == 55902
                                                                                                                                                                ? grom55902
                                                                                                                                                                : int.parse(value) == 55903
                                                                                                                                                                    ? grom55903
                                                                                                                                                                    : int.parse(value) == 56100
                                                                                                                                                                        ? grom56100
                                                                                                                                                                        : int.parse(value) == 56101
                                                                                                                                                                            ? grom56101
                                                                                                                                                                            : int.parse(value) == 56900
                                                                                                                                                                                ? grom56900
                                                                                                                                                                                : int.parse(value) == 56901
                                                                                                                                                                                    ? grom56901
                                                                                                                                                                                    : int.parse(value) == 57300
                                                                                                                                                                                        ? grom57300
                                                                                                                                                                                        : int.parse(value) == 58500
                                                                                                                                                                                            ? grom58500
                                                                                                                                                                                            : [];
    // vacancy00 = await hiveService.getBoxes("vacancy");
    // print("Getting vacgrom ${vacancy00.length}");
    //  vacancy00.length == 0 ?
    fetchVac();
    //: getLocal();
    // fetchVac();

    super.onInit();
  }

  /* getLocal() async {
    vacancy01 = await hiveService.getBoxes("vacancy");
    vacancy01.length != null ? isLoading.value = false : isLoading.value = true;
    print("Getting data from Hive01");
    print("Getting vacancygrom ${vacancy01.length}");
    fetchVac();
  }*/

  void fetchVac() async {
    vacancy00 = await hiveService.getBoxes("vacancy");
    print("Getting vacgrom ${vacancy00.length}");
    try {
      if (vacancy00.length != 0) {
        vacancy0 = await hiveService.getBoxes("vacancy");
        print("Getting data from Hive2");
      } else {
        vacancy0 = (await VacRepository.getAllVac());
        print("Getting data from API");
      }
      // vacancy0 = (await VacRepository.getAllVac());
      vacancy0.forEach((item) {
        print(item.placevac.substring(0, 10));

        for (int i = 0; i < gromada.length; i++)
          if (item.placevac.substring(0, 10) == gromada[i]) {
            vacancy.add(item);
            print("tt" + item.placevac.substring(0, 10));
          }
      });
    } finally {
      isLoading.value = false;
      if (vacancy.length == 0) {
        Get.snackbar(
          "Онлайн помічник", // title
          "На жаль,на даний час вакансії  по Вашій громаді відсутні",
          // message
          messageText: Text(
            "На жаль,на даний час вакансії  по Вашій громаді відсутні",
            style: TextStyle(
                fontWeight: FontWeight.bold, color: HexColor('#005BAA')),
          ),
          icon: Icon(Icons.alarm),
          shouldIconPulse: true,
          colorText: HexColor('#005BAA'),
          backgroundColor: Colors.amber,
          barBlur: 20,
          snackPosition: SnackPosition.TOP,
          isDismissible: true,
          duration: Duration(seconds: 3),
        );
      }
    }
  }

  filteredVacancy(value) {
    filteredVac = vacancy
        .where((item) =>
            (item.posadavac.toLowerCase().contains(value.toLowerCase()) ||
                item.salaryvac.toLowerCase().contains(value.toLowerCase())))
        .toList();
    //  filteredVac.add( filteredVac0 );
    // filteredVac.sort;
    // filter();
    print(filteredVac);
    print(filteredVac.length);

    /*  for (int i = 0; i < filteredVac0.length; i++) {
        var item =filteredVac0[i];
      filteredVac.add(item);

  };*/
// print(filteredVac0);
    //print(filteredVac0.length);
  }
}
